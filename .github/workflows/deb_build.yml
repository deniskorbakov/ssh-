name: deb-build
on:
  push:
    tags:
      - 'v*.*.*'

env:
  APP_NAME: 'ssh+'
  MAINTAINER: 'deniskorbakov'
  DESC: 'ssh+ - cli app connect manager for ssh'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Go
        run: go build -v ./
      - name: Create deb package
        run: |
          mkdir -p .debpkg/usr/bin
          cp -p ./${{ env.APP_NAME }} .debpkg/usr/bin/
      - name: Build deb package
        uses: jiro4989/build-deb-action@v3
        id: build_deb_package
        with:
          package: ${{ env.APP_NAME }}
          package_root: .debpkg
          maintainer: ${{ env.MAINTAINER }}
          version: ${{ github.ref }}
          arch: 'amd64'
          depends: 'sshpass, ssh'
          desc: ${{ env.DESC }}
          homepage: 'https://github.com/ssh-connection-manager/ssh-'
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{steps.build_deb_package.outputs.file_name}}
          name: deb-package

  draft_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Test upload-to-github-release works with `actions/create-release`.
          draft: true
          prerelease: false
      - uses: xresloader/upload-to-github-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          file: "./ssh+_0.5.0_amd64.deb" # This is where you use the output from the build step
          release_id: ${{ steps.create_release.outputs.id }}
          update_release_body: ${{ github.ref }}
          update_release_body_append: "true"
          overwrite: true
          verbose: true